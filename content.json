[{"title":"1-Python字典","date":"2018-08-24T07:07:24.000Z","path":"2018/08/24/1-Python字典/","text":"#1-Python-字典 字典类似于json。用{ }及键值对组成。和列表相比：速度快但是内存占用大 {‘key’,’value’} 新建一个大人物的基本信息。 ##1、新建空字典 greatWoman_0 = {} ##2、添加键值对 greatWoman_0[‘name’] = ‘quxiaodan’ greatWoman_0[‘birthday’] = ‘1991-08-11’ greatWoman_0[‘名族’] = ‘汉’ greatWoman_0[‘学校’] = ‘安徽建筑大学’ greatWoman_0[‘技能树_1’] = ‘JavaScript’ greatWoman_0[‘技能树_2’] = ‘HTML’ greatWoman_0[‘技能树_3’] = ‘Python’ ##3、修改键值对 greatWoman_0[‘学校’] = ‘杭州电子科技大学’ greatWoman_0[‘技能树_2’] = ‘HTML+CSS’ ##4、删除键值对 del greatWoman_0[‘技能树_1’] ##5、访问字典的值 greatWoman_0[‘name’] ##6、遍历字典 ###（1）遍历全部的键-值对 两个变量key、value可以为任意变量,方法items()获取字典键值对列表。遍历结果与键值对的顺序无关，不可预测的。字典遍历不关注键值对的存储顺序，只关心键值的对应关系 for key, value in greatWoman_0.items(): print(‘\\nKey:’ + key) print(‘\\nValue:’ + value) 转义字符 \\n：换行符 ###（2）遍历所有的键 遍历所有键使用方法keys() for key in greatWoman_0.keys(): print(‘\\nKey：’ + key ) ###（3）按顺序遍历所有的键 items()、keys()遍历结果都是无序的，需要用sorted()升序排列 for key in sorted(greatWoman_0.keys()): print(&apos;Key&apos; + key) 问题： 1、凡是报错信息中出现的错误包含“ASCII”，就是汉字编码的问题。由于本人用的sublime Text编辑器，遇到很烦的中文字符问题。UnicodeEncodeError: ‘ascii’ codec can’t encode characters in position 49-50: ordinal not in range(128) 搜索很多方法，感觉都不好使.后来终于找到方法，详见《SublimeText+python3的环境配置.md》 2、数字、字母、中文符合排序 数字&gt;字母&gt;中文 数字：按照首位大小 字母z–&gt;a 中文无序哇 ###(4)遍历所有的值 for value in greatWoman_0.values(): print(&apos;Name：&apos; + value) 值一定是字符串 另，用方法set()可以对值去重。 ##7、嵌套 嵌套是指：字典放在列表中，或者列表存储在字典的值里。 ###(1)#字典dict里面存储列表list favorite_languages = { &apos;qxd&apos;:[&apos;Python&apos;, &apos;JS&apos;, &apos;HTML&apos;], &apos;mawei&apos;:[&apos;C&apos;], &apos;fangteng&apos;:[&apos;Python&apos;, &apos;Selenium&apos;] } for name, languages in favorite_languages.items(): if len(languages) == 1: print(&quot;\\n&quot; + name.title() + &quot;`s favorite language is:&quot;) else: print(&quot;\\n&quot; + name.title() + &quot;`s favorite language are:&quot;) for language in languages: print(&quot;\\t&quot; + str(language)) ###(2)字典里面存储字典 users = { &apos;qxd&apos;:{ &apos;first&apos;:&apos;qu&apos;, &apos;last&apos;: &apos;xiaodan&apos;, &apos;location&apos;:&apos;hangzhou&apos; }, &apos;mw&apos;:{ &apos;first&apos;:&apos;ma&apos;, &apos;last&apos;: &apos;wei&apos;, &apos;location&apos;:&apos;hefei&apos; } } for user_name, user_info in users.items(): print(&quot;\\n&quot; + &quot;UserName:&quot; + user_name.title() + &quot;\\n\\tFullname:&quot; + user_info[&apos;first&apos;] + &quot; &quot; + user_info[&apos;last&apos;] + &quot;\\n\\tLocation:&quot; + user_info[&apos;location&apos;].title()) 或者 fullname = user_info[&apos;first&apos;] + &quot; &quot; + user_info[&apos;last&apos;] print(&quot;\\nUserName:&quot; + user_name.title()) print(&quot;\\tFullname:&quot; + fullname) print(&quot;\\tLocation:&quot; + user_info[&apos;location&apos;])","tags":[{"name":"python 字典","slug":"python-字典","permalink":"http://yoursite.com/tags/python-字典/"}]},{"title":"Hello World","date":"2018-08-24T03:33:22.364Z","path":"2018/08/24/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]